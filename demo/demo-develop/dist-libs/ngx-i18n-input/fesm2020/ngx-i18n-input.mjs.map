{"version":3,"file":"ngx-i18n-input.mjs","sources":["../../../../../workspace/projects/ngx-i18n-input/src/lib/functions.ts","../../../../../workspace/projects/ngx-i18n-input/src/lib/country-iso-code.ts","../../../../../workspace/projects/ngx-i18n-input/src/lib/types.ts","../../../../../workspace/projects/ngx-i18n-input/src/lib/ngx-i18n-input.service.ts","../../../../../workspace/projects/ngx-i18n-input/src/lib/ngx-i18n-input.component.ts","../../../../../workspace/projects/ngx-i18n-input/src/lib/ngx-i18n-input.component.html","../../../../../workspace/projects/ngx-i18n-input/src/lib/ngx-i18n-input.module.ts","../../../../../workspace/projects/ngx-i18n-input/src/public-api.ts","../../../../../workspace/projects/ngx-i18n-input/src/ngx-i18n-input.ts"],"sourcesContent":["import { Lang } from \"./types\";\n\nexport function ngxI18nDefaultFormatOutput<T>(formValue: Record<Lang, T | null>): Record<Lang, T | null> {\n  return formValue;\n}","export const COUNTRY_ISO_CODES = [\n  'AC',\n  'AD',\n  'AE',\n  'AF',\n  'AG',\n  'AI',\n  'AL',\n  'AM',\n  'AO',\n  'AR',\n  'AS',\n  'AT',\n  'AU',\n  'AW',\n  'AX',\n  'AZ',\n  'BA',\n  'BB',\n  'BD',\n  'BE',\n  'BF',\n  'BG',\n  'BH',\n  'BI',\n  'BJ',\n  'BL',\n  'BM',\n  'BN',\n  'BO',\n  'BQ',\n  'BR',\n  'BS',\n  'BT',\n  'BW',\n  'BY',\n  'BZ',\n  'CA',\n  'CC',\n  'CD',\n  'CF',\n  'CG',\n  'CH',\n  'CI',\n  'CK',\n  'CL',\n  'CM',\n  'CN',\n  'CO',\n  'CR',\n  'CU',\n  'CV',\n  'CW',\n  'CX',\n  'CY',\n  'CZ',\n  'DE',\n  'DJ',\n  'DK',\n  'DM',\n  'DO',\n  'DZ',\n  'EC',\n  'EE',\n  'EG',\n  'EH',\n  'ER',\n  'ES',\n  'ET',\n  'FI',\n  'FJ',\n  'FK',\n  'FM',\n  'FO',\n  'FR',\n  'GA',\n  'GB',\n  'GD',\n  'GE',\n  'GF',\n  'GG',\n  'GH',\n  'GI',\n  'GL',\n  'GM',\n  'GN',\n  'GP',\n  'GQ',\n  'GR',\n  'GT',\n  'GU',\n  'GW',\n  'GY',\n  'HK',\n  'HN',\n  'HR',\n  'HT',\n  'HU',\n  'ID',\n  'IE',\n  'IL',\n  'IM',\n  'IN',\n  'IO',\n  'IQ',\n  'IR',\n  'IS',\n  'IT',\n  'JE',\n  'JM',\n  'JO',\n  'JP',\n  'KE',\n  'KG',\n  'KH',\n  'KI',\n  'KM',\n  'KN',\n  'KP',\n  'KR',\n  'KW',\n  'KY',\n  'KZ',\n  'LA',\n  'LB',\n  'LC',\n  'LI',\n  'LK',\n  'LR',\n  'LS',\n  'LT',\n  'LU',\n  'LV',\n  'LY',\n  'MA',\n  'MC',\n  'MD',\n  'ME',\n  'MF',\n  'MG',\n  'MH',\n  'MK',\n  'ML',\n  'MM',\n  'MN',\n  'MO',\n  'MP',\n  'MQ',\n  'MR',\n  'MS',\n  'MT',\n  'MU',\n  'MV',\n  'MW',\n  'MX',\n  'MY',\n  'MZ',\n  'NA',\n  'NC',\n  'NE',\n  'NF',\n  'NG',\n  'NI',\n  'NL',\n  'NO',\n  'NP',\n  'NR',\n  'NU',\n  'NZ',\n  'OM',\n  'PA',\n  'PE',\n  'PF',\n  'PG',\n  'PH',\n  'PK',\n  'PL',\n  'PM',\n  'PR',\n  'PS',\n  'PT',\n  'PW',\n  'PY',\n  'QA',\n  'RE',\n  'RO',\n  'RS',\n  'RU',\n  'RW',\n  'SA',\n  'SB',\n  'SC',\n  'SD',\n  'SE',\n  'SG',\n  'SH',\n  'SI',\n  'SJ',\n  'SK',\n  'SL',\n  'SM',\n  'SN',\n  'SO',\n  'SR',\n  'SS',\n  'ST',\n  'SV',\n  'SX',\n  'SY',\n  'SZ',\n  'TA',\n  'TC',\n  'TD',\n  'TG',\n  'TH',\n  'TJ',\n  'TK',\n  'TL',\n  'TM',\n  'TN',\n  'TO',\n  'TR',\n  'TT',\n  'TV',\n  'TW',\n  'TZ',\n  'UA',\n  'UG',\n  'US',\n  'UY',\n  'UZ',\n  'VA',\n  'VC',\n  'VE',\n  'VG',\n  'VI',\n  'VN',\n  'VU',\n  'WF',\n  'WS',\n  'XK',\n  'YE',\n  'YT',\n  'ZA',\n  'ZM',\n  'ZW'\n] as const;\n\n/**\n * TODO: how localize country names?\n */\nexport const LANGUAGE_DETAILS: Record<string, { i18nName: string } > = {\n  en: { i18nName: \"English\"      },\n  zh: { i18nName: \"Chinese\"      },\n  es: { i18nName: \"Spanish\"      },\n  ar: { i18nName: \"Arabic\"       },\n  hi: { i18nName: \"Hindi\"        },\n  bn: { i18nName: \"Bengali\"      },\n  pt: { i18nName: \"Portuguese\"   },\n  ru: { i18nName: \"Russian\"      },\n  ja: { i18nName: \"Japanese\"     },\n  de: { i18nName: \"German\"       },\n  fr: { i18nName: \"French\"       },\n  it: { i18nName: \"Italian\"      },\n  tr: { i18nName: \"Turkish\"      },\n  ko: { i18nName: \"Korean\"       },\n  vi: { i18nName: \"Vietnamese\"   },\n  ur: { i18nName: \"Urdu\"         },\n  fa: { i18nName: \"Persian\"      },\n  pl: { i18nName: \"Polish\"       },\n  nl: { i18nName: \"Dutch\"        },\n  th: { i18nName: \"Thai\"         },\n};\n\nexport type CountryIsoCode = typeof COUNTRY_ISO_CODES[number];","import { InjectionToken } from \"@angular/core\";\nimport { LANGUAGE_DETAILS } from \"./country-iso-code\";\n\nexport type Lang = string;\nexport type Langs = Lang[];\n\nexport interface NgxI18nInputConfig {\n  availableLangs: Langs;\n  stringifyLang: (lang: string) => string;\n}\n\nexport const NGX_I18N_INPUT_DEFAULT_CONFIGS: NgxI18nInputConfig = {\n  availableLangs: [\"en\"],\n  stringifyLang: (lang: string) => {\n    console.debug(\"default stringifyLang\", {lang});\n    return LANGUAGE_DETAILS[lang]?.i18nName || lang\n  }\n};\n\n// TODO partial ??\nexport const NGX_I18N_INPUT_CONFIG = new InjectionToken<NgxI18nInputConfig>('NGX_I18N_INPUT_CONFIG');","import { inject, Injectable, InjectFlags } from '@angular/core';\nimport { NGX_I18N_INPUT_CONFIG, NGX_I18N_INPUT_DEFAULT_CONFIGS, NgxI18nInputConfig } from './types';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { COUNTRY_ISO_CODES } from './country-iso-code';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxI18nInputService {\n  private readonly providedConfigs: NgxI18nInputConfig | null = inject(NGX_I18N_INPUT_CONFIG, InjectFlags.Optional);\n  readonly configs$: BehaviorSubject<NgxI18nInputConfig> = new BehaviorSubject(\n    {...(this.providedConfigs || NGX_I18N_INPUT_DEFAULT_CONFIGS)}\n  );\n\n  readonly availableLangs$: BehaviorSubject<string[]> = new BehaviorSubject(this.configs$.value.availableLangs);\n\n  constructor(){\n    this.configs$.subscribe((v: NgxI18nInputConfig) => {\n      this.availableLangs$.next(v.availableLangs);\n    });\n  }\n\n  setAvailableLangs(langs: string[]): void {\n    // langs = langs.filter((lang) => this.isLang(lang));\n\n    if (langs.length === 0) langs = NGX_I18N_INPUT_DEFAULT_CONFIGS.availableLangs;\n\n    const v = this.configs$.value;\n    v.availableLangs = langs;\n    this.configs$.next(v);\n  }\n\n  getAvailableLangs(): string[] {\n    return this.availableLangs$.value;\n  }\n\n  // isLang(lang: unknown): boolean {\n  //   return (\n  //     typeof lang === \"string\" &&\n  //     lang.length > 0 &&\n  //     ([...COUNTRY_ISO_CODES] as string[]).includes(lang.toUpperCase())\n  //   );\n  // }\n  \n}\n","import { ChangeDetectionStrategy, Component, forwardRef, inject, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor, FormArray, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Lang } from './types';\nimport { ngxI18nDefaultFormatOutput } from './functions';\nimport { map, Observable } from 'rxjs';\nimport { NgxI18nInputService } from './ngx-i18n-input.service';\n\n@Component({\n  selector: 'ngx-i18n-input',\n  templateUrl: './ngx-i18n-input.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxI18nInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxI18nInputComponent<T> implements OnInit, ControlValueAccessor {\n\n  private readonly service: NgxI18nInputService = inject(NgxI18nInputService);\n  // readonly configs$ = this.service.configs$;\n\n  configs = this.service.configs$.value;\n\n  readonly forms: FormGroup = new FormGroup({});\n\n  @Input() formatOutput: (value: Record<Lang, T | null>) => Record<Lang, T | null> = ngxI18nDefaultFormatOutput;\n\n  @Output() valueChanges: Observable<Record<Lang, T | null>> = this.forms.valueChanges.pipe(map(this.formatOutput));\n\n  /**\n   * TODO when touched, emit an event\n   */\n  @Output() touchedChanges: Observable<void> = new Observable<void>();\n\n  /**\n   * Customize input template. Suggested but not required.\n   * Usage:\n   * ```html\n   *  <ng-template #titleTemplate let-all>\n   *   <input [formControl]=\"all.control\">\n   *  </ng-template>\n   *\n   *  <ngx-i18n-input [inputTemplate]=\"titleTemplate\" formControlName=\"title\">\n   * ```\n   */\n  @Input() inputTemplate: TemplateRef<unknown> | null = null;\n\n  /**\n   * Customize language name template.\n   * Example with both input and label templates:\n   */\n  @Input() labelTemplate: TemplateRef<unknown> | null = null;\n\n  readonly availableLangs$ = this.service.availableLangs$;\n\n  ngOnInit(): void {\n    this.availableLangs$.subscribe({next: (langs: Lang[]) => {\n      langs.forEach((lang: Lang) => {\n        this.forms.addControl(lang, new FormControl(null));\n      });\n    }});\n\n    this.service.configs$.subscribe({next: (configs) => this.configs = configs});\n  }\n\n  writeValue(value: unknown): void {\n    if (value === null || value === undefined) value = {};\n\n    if (typeof value !== 'object') {\n      console.warn('NgxI18nInputComponent: value must be an object or null. Will reset input. got ', value);\n      value = {};\n    }\n\n    this.forms.patchValue(value as Record<string, unknown>, { emitEvent: false });\n  }\n\n  registerOnChange(fn: any): void {\n    this.valueChanges.subscribe({\n      next: (value: Record<Lang, T | null>) => fn(value)\n    });\n  }\n\n  registerOnTouched(fn: any): void {\n    this.registerOnChange(fn);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    console.log(\"disabledState\");\n    this.forms[isDisabled ? 'disable' : 'enable']();\n  }\n\n}\n","<form [formGroup]=\"forms\">\n  <ng-template #defaultInputTemplate let-all>\n    <input [formControl]=\"all.control\">\n  </ng-template>\n\n  <ng-template #defaultlabelTemplate let-all>\n    <span>{{all.stringify(all.language)}}</span>\n  </ng-template>\n\n  <ng-container *ngFor=\"let lang of (availableLangs$ | async)\">\n    <ng-container *ngTemplateOutlet=\"labelTemplate || defaultlabelTemplate; context: {\n      $implicit: {\n        language: lang,\n        stringify: configs.stringifyLang,\n      }\n      }\"></ng-container>\n\n    <ng-container *ngTemplateOutlet=\"inputTemplate || defaultInputTemplate; context: {\n      $implicit: {\n        language: lang,\n        control: forms.controls[lang]\n      }\n      }\"></ng-container>\n  </ng-container>\n</form>","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgxI18nInputComponent } from './ngx-i18n-input.component';\nimport { AsyncPipe, JsonPipe, NgForOf, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NGX_I18N_INPUT_CONFIG, NGX_I18N_INPUT_DEFAULT_CONFIGS, NgxI18nInputConfig } from './types';\n\n\n\n@NgModule({\n  declarations: [\n    NgxI18nInputComponent\n  ],\n  imports: [\n    NgTemplateOutlet,\n    NgIf,\n    ReactiveFormsModule,\n    NgForOf,\n    AsyncPipe,\n\n    // DEVELOPMENT\n    JsonPipe\n  ],\n  exports: [\n    NgxI18nInputComponent\n  ]\n})\nexport class NgxI18nInputModule {\n  static forRoot(configs: Partial<NgxI18nInputConfig>): ModuleWithProviders<NgxI18nInputModule> {\n    console.log(`forRoot`, { self: this, configs });\n    return {\n      ngModule: NgxI18nInputModule,\n      providers: [\n        {\n          provide: NGX_I18N_INPUT_CONFIG,\n          useValue: {...NGX_I18N_INPUT_DEFAULT_CONFIGS, ...configs}\n        }\n      ]\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-i18n-input\n */\n\n// export * from './lib/ngx-i18n-input.service';\nexport * from './lib/ngx-i18n-input.component';\nexport * from './lib/ngx-i18n-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}